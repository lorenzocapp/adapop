#One way
nc.oneway <- matrixStats::logSumExp(vec_log_prob.for)
ratio.oneway <- exp(vec_log_prob.for-nc.oneway)
plot(ratio.oneway)
abline(v=(which(list$grid.bound==0.4)-1),col="red")
n.grid <- 100
n <- 1000
x <- seq(0,1,1/(n-1))
y <- rep(0,n)
y[x<0.4] <- rnorm(sum(x<0.4),0,sigma1)
y[x>=0.4] <- rnorm(sum(x>=0.4),0,sigma2)
plot(x,y)
sample <- data.frame(x,y)
plot(x,y)
list<-bins_and_stats(sample,n.grid)
n.vec <- list$n.vec
S_ysq <- list$S_ysq
n.plus.for <- revcumsum(n.vec)
n.plus.back <- rev(cumsum(n.vec))
S_ysq.for <- S_ysq
S_ysq.back <- rev(S_ysq)
alpha<-0.0001
beta <- 0.0001
#Posterior paremters
vec_log_prob.for <- vec_log_marginal_prob(alpha,beta,S_ysq.for,n.plus.for)
vec_log_prob.back <- vec_log_marginal_prob(alpha,beta,S_ysq.back,n.plus.back)
plot(vec_log_prob.for)
#One way
nc.oneway <- matrixStats::logSumExp(vec_log_prob.for)
ratio.oneway <- exp(vec_log_prob.for-nc.oneway)
plot(ratio.oneway)
abline(v=(which(list$grid.bound==0.4)-1),col="red")
n.grid <- 100
n <- 1000
x <- seq(0,1,1/(n-1))
y <- rep(0,n)
y[x<0.4] <- rnorm(sum(x<0.4),0,sigma1)
y[x>=0.4] <- rnorm(sum(x>=0.4),0,sigma2)
plot(x,y)
sample <- data.frame(x,y)
plot(x,y)
list<-bins_and_stats(sample,n.grid)
n.vec <- list$n.vec
S_ysq <- list$S_ysq
n.plus.for <- revcumsum(n.vec)
n.plus.back <- rev(cumsum(n.vec))
S_ysq.for <- S_ysq
S_ysq.back <- rev(S_ysq)
alpha<-0.0001
beta <- 0.0001
#Posterior paremters
vec_log_prob.for <- vec_log_marginal_prob(alpha,beta,S_ysq.for,n.plus.for)
vec_log_prob.back <- vec_log_marginal_prob(alpha,beta,S_ysq.back,n.plus.back)
plot(vec_log_prob.for)
#One way
nc.oneway <- matrixStats::logSumExp(vec_log_prob.for)
ratio.oneway <- exp(vec_log_prob.for-nc.oneway)
plot(ratio.oneway)
abline(v=(which(list$grid.bound==0.4)-1),col="red")
n.grid <- 100
n <- 1000
x <- seq(0,1,1/(n-1))
y <- rep(0,n)
y[x<0.4] <- rnorm(sum(x<0.4),0,sigma1)
y[x>=0.4] <- rnorm(sum(x>=0.4),0,sigma2)
plot(x,y)
sample <- data.frame(x,y)
plot(x,y)
list<-bins_and_stats(sample,n.grid)
n.vec <- list$n.vec
S_ysq <- list$S_ysq
n.plus.for <- revcumsum(n.vec)
n.plus.back <- rev(cumsum(n.vec))
S_ysq.for <- S_ysq
S_ysq.back <- rev(S_ysq)
alpha<-0.0001
beta <- 0.0001
#Posterior paremters
vec_log_prob.for <- vec_log_marginal_prob(alpha,beta,S_ysq.for,n.plus.for)
vec_log_prob.back <- vec_log_marginal_prob(alpha,beta,S_ysq.back,n.plus.back)
plot(vec_log_prob.for)
#One way
nc.oneway <- matrixStats::logSumExp(vec_log_prob.for)
ratio.oneway <- exp(vec_log_prob.for-nc.oneway)
plot(ratio.oneway)
abline(v=(which(list$grid.bound==0.4)-1),col="red")
n.grid <- 100
n <- 1000
x <- seq(0,1,1/(n-1))
y <- rep(0,n)
y[x<0.4] <- rnorm(sum(x<0.4),0,sigma1)
y[x>=0.4] <- rnorm(sum(x>=0.4),0,sigma2)
plot(x,y)
sample <- data.frame(x,y)
plot(x,y)
list<-bins_and_stats(sample,n.grid)
n.vec <- list$n.vec
S_ysq <- list$S_ysq
n.plus.for <- revcumsum(n.vec)
n.plus.back <- rev(cumsum(n.vec))
S_ysq.for <- S_ysq
S_ysq.back <- rev(S_ysq)
alpha<-0.0001
beta <- 0.0001
#Posterior paremters
vec_log_prob.for <- vec_log_marginal_prob(alpha,beta,S_ysq.for,n.plus.for)
vec_log_prob.back <- vec_log_marginal_prob(alpha,beta,S_ysq.back,n.plus.back)
plot(vec_log_prob.for)
#One way
nc.oneway <- matrixStats::logSumExp(vec_log_prob.for)
ratio.oneway <- exp(vec_log_prob.for-nc.oneway)
plot(ratio.oneway)
abline(v=(which(list$grid.bound==0.4)-1),col="red")
n.grid <- 100
n <- 1000
x <- seq(0,1,1/(n-1))
y <- rep(0,n)
y[x<0.4] <- rnorm(sum(x<0.4),0,sigma1)
y[x>=0.4] <- rnorm(sum(x>=0.4),0,sigma2)
plot(x,y)
sample <- data.frame(x,y)
plot(x,y)
list<-bins_and_stats(sample,n.grid)
n.vec <- list$n.vec
S_ysq <- list$S_ysq
n.plus.for <- revcumsum(n.vec)
n.plus.back <- rev(cumsum(n.vec))
S_ysq.for <- S_ysq
S_ysq.back <- rev(S_ysq)
alpha<-0.0001
beta <- 0.0001
#Posterior paremters
vec_log_prob.for <- vec_log_marginal_prob(alpha,beta,S_ysq.for,n.plus.for)
vec_log_prob.back <- vec_log_marginal_prob(alpha,beta,S_ysq.back,n.plus.back)
plot(vec_log_prob.for)
#One way
nc.oneway <- matrixStats::logSumExp(vec_log_prob.for)
ratio.oneway <- exp(vec_log_prob.for-nc.oneway)
plot(ratio.oneway)
abline(v=(which(list$grid.bound==0.4)-1),col="red")
n.grid <- 100
n <- 1000
x <- seq(0,1,1/(n-1))
y <- rep(0,n)
y[x<0.4] <- rnorm(sum(x<0.4),0,sigma1)
y[x>=0.4] <- rnorm(sum(x>=0.4),0,sigma2)
plot(x,y)
sample <- data.frame(x,y)
plot(x,y)
list<-bins_and_stats(sample,n.grid)
n.vec <- list$n.vec
S_ysq <- list$S_ysq
n.plus.for <- revcumsum(n.vec)
n.plus.back <- rev(cumsum(n.vec))
S_ysq.for <- S_ysq
S_ysq.back <- rev(S_ysq)
alpha<-0.0001
beta <- 0.0001
#Posterior paremters
vec_log_prob.for <- vec_log_marginal_prob(alpha,beta,S_ysq.for,n.plus.for)
vec_log_prob.back <- vec_log_marginal_prob(alpha,beta,S_ysq.back,n.plus.back)
plot(vec_log_prob.for)
#One way
nc.oneway <- matrixStats::logSumExp(vec_log_prob.for)
ratio.oneway <- exp(vec_log_prob.for-nc.oneway)
plot(ratio.oneway)
abline(v=(which(list$grid.bound==0.4)-1),col="red")
n.grid <- 100
n <- 1000
x <- seq(0,1,1/(n-1))
y <- rep(0,n)
y[x<0.4] <- rnorm(sum(x<0.4),0,sigma1)
y[x>=0.4] <- rnorm(sum(x>=0.4),0,sigma2)
plot(x,y)
sample <- data.frame(x,y)
plot(x,y)
list<-bins_and_stats(sample,n.grid)
n.vec <- list$n.vec
S_ysq <- list$S_ysq
n.plus.for <- revcumsum(n.vec)
n.plus.back <- rev(cumsum(n.vec))
S_ysq.for <- S_ysq
S_ysq.back <- rev(S_ysq)
alpha<-0.0001
beta <- 0.0001
#Posterior paremters
vec_log_prob.for <- vec_log_marginal_prob(alpha,beta,S_ysq.for,n.plus.for)
vec_log_prob.back <- vec_log_marginal_prob(alpha,beta,S_ysq.back,n.plus.back)
plot(vec_log_prob.for)
#One way
nc.oneway <- matrixStats::logSumExp(vec_log_prob.for)
ratio.oneway <- exp(vec_log_prob.for-nc.oneway)
plot(ratio.oneway)
abline(v=(which(list$grid.bound==0.4)-1),col="red")
n.grid <- 100
n <- 1000
x <- seq(0,1,1/(n-1))
y <- rep(0,n)
y[x<0.4] <- rnorm(sum(x<0.4),0,sigma1)
y[x>=0.4] <- rnorm(sum(x>=0.4),0,sigma2)
plot(x,y)
sample <- data.frame(x,y)
plot(x,y)
list<-bins_and_stats(sample,n.grid)
n.vec <- list$n.vec
S_ysq <- list$S_ysq
n.plus.for <- revcumsum(n.vec)
n.plus.back <- rev(cumsum(n.vec))
S_ysq.for <- S_ysq
S_ysq.back <- rev(S_ysq)
alpha<-0.0001
beta <- 0.0001
#Posterior paremters
vec_log_prob.for <- vec_log_marginal_prob(alpha,beta,S_ysq.for,n.plus.for)
vec_log_prob.back <- vec_log_marginal_prob(alpha,beta,S_ysq.back,n.plus.back)
plot(vec_log_prob.for)
#One way
nc.oneway <- matrixStats::logSumExp(vec_log_prob.for)
ratio.oneway <- exp(vec_log_prob.for-nc.oneway)
plot(ratio.oneway)
abline(v=(which(list$grid.bound==0.4)-1),col="red")
n.grid <- 100
n <- 1000
x <- seq(0,1,1/(n-1))
y <- rep(0,n)
y[x<0.4] <- rnorm(sum(x<0.4),0,sigma1)
y[x>=0.4] <- rnorm(sum(x>=0.4),0,sigma2)
plot(x,y)
sample <- data.frame(x,y)
plot(x,y)
list<-bins_and_stats(sample,n.grid)
n.vec <- list$n.vec
S_ysq <- list$S_ysq
n.plus.for <- revcumsum(n.vec)
n.plus.back <- rev(cumsum(n.vec))
S_ysq.for <- S_ysq
S_ysq.back <- rev(S_ysq)
alpha<-0.0001
beta <- 0.0001
#Posterior paremters
vec_log_prob.for <- vec_log_marginal_prob(alpha,beta,S_ysq.for,n.plus.for)
vec_log_prob.back <- vec_log_marginal_prob(alpha,beta,S_ysq.back,n.plus.back)
plot(vec_log_prob.for)
#One way
nc.oneway <- matrixStats::logSumExp(vec_log_prob.for)
ratio.oneway <- exp(vec_log_prob.for-nc.oneway)
plot(ratio.oneway)
abline(v=(which(list$grid.bound==0.4)-1),col="red")
dir <- '/Users/lorenzocappello/Google Drive/Statistics/postdoc Palacios/delta_covid_attempt/selection_model_delta_truncated/'
setwd(dir)
source("functions_inla_selection_truncated.R") #where the new functions should be stored
source("tajima_inference.R")
library("phylodyn")
library("ape")
library("lubridate")
dev.off()
treeDelta<-read.nexus("../beast2_ver_1&2/tree_singapore_delta")
treeDelta<-read.nexus("../beast2_ver_3/tree_uk_2_delta")
plot(treeDelta,show.tip.label=FALSE)
axisPhylo()
treeNotdelta<-read.nexus("../beast2_ver_3/tree_uk_2_notdelta")
#tree not delta refinement
#treeD <-drop.tip(tree,treeG$tip.label) # This is the D clade
treeNotdelta <- extract.clade(treeNotdelta,153)
plot(treeNotdelta,show.tip.label = FALSE)
axisPhylo()
plot(treeNotdelta,show.tip.label = FALSE)
axisPhylo()
plot(treeDelta,show.tip.label=FALSE)
axisPhylo()
plot(treeNotdelta,show.tip.label = FALSE)
axisPhylo()
plot(treeDelta,show.tip.label=FALSE)
axisPhylo()
treeNotdelta<-read.nexus("../beast2_ver_3/tree_uk_2_notdelta")
plot(treeNotdelta,show.tip.label = FALSE)
axisPhylo()
#tree not delta refinement
#treeD <-drop.tip(tree,treeG$tip.label) # This is the D clade
treeNotdelta <- extract.clade(treeNotdelta,152)
plot(treeNotdelta,show.tip.label = FALSE)
axisPhylo()
treeNotdelta<-read.nexus("../beast2_ver_3/tree_uk_2_notdelta")
plot(treeNotdelta,show.tip.label = FALSE)
axisPhylo()
plot(treeNotdelta,show.tip.label = FALSE,main="uk alpha var")
axisPhylo()
#tree not delta refinement
#treeD <-drop.tip(tree,treeG$tip.label) # This is the D clade
treeNotdelta <- extract.clade(treeNotdelta,152)
plot(treeNotdelta,show.tip.label = FALSE,main="uk alpha var")
axisPhylo()
data1<-treeDelta
data2 <- treeNotdelta
samp_times1 <- c()
for (label in data1$tip.label){samp_times1 <- c(samp_times1,strsplit(label,"[|]")[[1]][3])}
samp_times1 <- decimal_date(date(samp_times1))
samp_times2 <- c()
for (label in data2$tip.label){samp_times2 <- c(samp_times2,strsplit(label,"[|]")[[1]][3])}
samp_times2 <- decimal_date(date(samp_times2))
lastdate <- max(c(samp_times1,samp_times2))
samp_times1 <- lastdate-samp_times1
samp_times2 <- lastdate-samp_times2
res1s<-BNPR_sel(data1,data2,samp_times1,samp_times2,lengthout=100)
plot_BNPR(res1s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="Ne(t)",main="Effective Pop Size",ylim=c(0.005,50),xlim=c(0.54,0))
res2s<-BNPR_sel(data2,data1,samp_times2,samp_times1,lengthout=100,parSel = TRUE)
plot_BNPR(res2s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="Ne(t)",main="Effective Pop Size",ylim=c(0.5,500),xlim=c(0.25,0))
par(mfrow=c(2,2))
plot_BNPR(res1s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="Ne(t)",main="",ylim=c(0.05,500),xlim=c(0.5,0))
plot_BNPR(res2s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="",main="",ylim=c(0.05,50000),xlim=c(0.5,0))
par(mfrow=c(2,2))
plot_BNPR(res1s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="Ne(t)",main="",ylim=c(0.05,50000),xlim=c(0.5,0))
plot_BNPR(res2s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="",main="",ylim=c(0.05,50000),xlim=c(0.5,0))
par(mfrow=c(1,2))
plot(res2s$beta0post,type="l",lwd=3,main="Posterior beta0")
abline(v=0,col="red",lwd=2)
plot(res2s$beta1post,type="l",lwd=3,,main="Posterior beta1")
abline(v=1,col="red",lwd=2)
res2s<-BNPR_sel(data2,data1,samp_times2,samp_times1,lengthout=100,parSel = FALSE)
plot_BNPR(res2s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="Ne(t)",main="Effective Pop Size",ylim=c(0.5,500),xlim=c(0.25,0))
par(mfrow=c(2,2))
plot_BNPR(res2s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="",main="",ylim=c(0.05,50000),xlim=c(0.5,0))
lines(res2s$selInt)
plot_adaSel(res2s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="",main="",ylim=c(0.05,50000),xlim=c(0.5,0))
res2s<-BNPR_sel(data2,data1,samp_times2,samp_times1,lengthout=100,parSel = FALSE)
plot_BNPR(res2s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="Ne(t)",main="Effective Pop Size",ylim=c(0.5,500),xlim=c(0.25,0))
par(mfrow=c(2,2))
plot_BNPR(res2s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="",main="",ylim=c(0.05,50000),xlim=c(0.5,0))
plot_adaSel(res2s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="",main="",ylim=c(0.05,50000),xlim=c(0.5,0))
dev.off()
treeDelta<-read.nexus("../beast2_ver_1&2/tree_germany_delta")
plot(treeDelta,show.tip.label=FALSE)
axisPhylo()
treeNotdelta<-read.nexus("../beast2_ver_1&2/tree_germany_b_1_1_7")
plot(treeNotdelta,show.tip.label = FALSE,main="uk alpha var")
axisPhylo()
plot(treeNotdelta,show.tip.label = FALSE,main="ger alpha var")
axisPhylo()
data1<-treeDelta
data2 <- treeNotdelta
samp_times1 <- c()
for (label in data1$tip.label){samp_times1 <- c(samp_times1,strsplit(label,"[|]")[[1]][3])}
samp_times1 <- decimal_date(date(samp_times1))
samp_times2 <- c()
for (label in data2$tip.label){samp_times2 <- c(samp_times2,strsplit(label,"[|]")[[1]][3])}
samp_times2 <- decimal_date(date(samp_times2))
lastdate <- max(c(samp_times1,samp_times2))
samp_times1 <- lastdate-samp_times1
samp_times2 <- lastdate-samp_times2
res1s<-BNPR_sel(data1,data2,samp_times1,samp_times2,lengthout=100)
plot_BNPR(res1s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="Ne(t)",main="Effective Pop Size",ylim=c(0.005,50),xlim=c(0.54,0))
res1b<-BNPR(data2,lengthout=100)
plot_BNPR(res1b,heatmaps=TRUE,heatmap_labels = FALSE,ylab="Ne(t)",main="Effective Pop Size",ylim=c(0.5,500),xlim=c(0.25,0))
res2s<-BNPR_sel(data2,data1,samp_times2,samp_times1,lengthout=100,parSel = FALSE)
plot_BNPR(res2s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="Ne(t)",main="Effective Pop Size",ylim=c(0.5,500),xlim=c(0.25,0))
par(mfrow=c(2,2))
plot_BNPR(res1s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="Ne(t)",main="",ylim=c(0.05,50000),xlim=c(0.5,0))
plot_BNPR(res2s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="",main="",ylim=c(0.05,50000),xlim=c(0.5,0))
lines(res2s$selInt)
res2s<-BNPR_sel(data2,data1,samp_times2,samp_times1,lengthout=100,parSel = TRUE)
par(mfrow=c(2,2))
plot_BNPR(res1s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="Ne(t)",main="",ylim=c(0.05,50000),xlim=c(0.5,0))
plot_BNPR(res2s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="",main="",ylim=c(0.05,50000),xlim=c(0.5,0))
res3s<-BNPR_sel(data1,data2,samp_times1,samp_times2,lengthout=50,u.truncation = 0.25,
prec_alpha = 0.01)
res4s<-BNPR_sel(data2,data1,samp_times2,samp_times1,lengthout=50,u.truncation = 0.25,
prec_alpha = 0.000001)
par(mfrow=c(1,2))
plot_BNPR(res3s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="Ne(t)",main="",ylim= c(0.5,500),xlim=c(0.25,0))
plot_BNPR(res4s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="",main="",ylim=c(0.5,500),xlim=c(0.25,0))
res3s<-BNPR_sel(data1,data2,samp_times1,samp_times2,lengthout=50,u.truncation = 0.25, parSel = FALSE,
prec_alpha = 0.01)
res4s<-BNPR_sel(data2,data1,samp_times2,samp_times1,lengthout=50,u.truncation = 0.25, parSel =FALSE,
prec_alpha = 0.000001)
par(mfrow=c(1,2))
plot_BNPR(res3s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="Ne(t)",main="",ylim= c(0.5,500),xlim=c(0.25,0))
plot_BNPR(res4s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="",main="",ylim=c(0.5,500),xlim=c(0.25,0))
plot_adaSel(res4s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="",main="",ylim=c(0.05,50000),xlim=c(0.25,0))
treeDelta<-read.nexus("../beast2_ver_1&2/tree_spain_delta")
plot(treeDelta,show.tip.label=FALSE)
axisPhylo()
dev.off()
plot(treeDelta,show.tip.label=FALSE)
axisPhylo()
treeNotdelta<-read.nexus("../beast2_ver_1&2/tree_spain_b_1_1_7")
plot(treeNotdelta,show.tip.label = FALSE,main="ger alpha var")
axisPhylo()
data1<-treeDelta
data2 <- treeNotdelta
samp_times1 <- c()
for (label in data1$tip.label){samp_times1 <- c(samp_times1,strsplit(label,"[|]")[[1]][3])}
samp_times1 <- decimal_date(date(samp_times1))
samp_times2 <- c()
for (label in data2$tip.label){samp_times2 <- c(samp_times2,strsplit(label,"[|]")[[1]][3])}
samp_times2 <- decimal_date(date(samp_times2))
lastdate <- max(c(samp_times1,samp_times2))
samp_times1 <- lastdate-samp_times1
samp_times2 <- lastdate-samp_times2
res1s<-BNPR_sel(data1,data2,samp_times1,samp_times2,lengthout=100)
plot_BNPR(res1s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="Ne(t)",main="Effective Pop Size",ylim=c(0.005,50),xlim=c(0.54,0))
res1b<-BNPR(data2,lengthout=100)
plot_BNPR(res1b,heatmaps=TRUE,heatmap_labels = FALSE,ylab="Ne(t)",main="Effective Pop Size",ylim=c(0.5,500),xlim=c(0.25,0))
res2s<-BNPR_sel(data2,data1,samp_times2,samp_times1,lengthout=100,parSel = TRUE)
plot_BNPR(res2s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="Ne(t)",main="Effective Pop Size",ylim=c(0.5,500),xlim=c(0.25,0))
par(mfrow=c(2,2))
plot_BNPR(res1s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="Ne(t)",main="",ylim=c(0.05,50000),xlim=c(0.5,0))
plot_BNPR(res2s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="",main="",ylim=c(0.05,50000),xlim=c(0.5,0))
res3s<-BNPR_sel(data1,data2,samp_times1,samp_times2,lengthout=50,u.truncation = 0.25, parSel = FALSE,
prec_alpha = 0.01)
res4s<-BNPR_sel(data2,data1,samp_times2,samp_times1,lengthout=50,u.truncation = 0.25, parSel =FALSE,
prec_alpha = 0.000001)
res3s<-BNPR_sel(data1,data2,samp_times1,samp_times2,lengthout=50,u.truncation = 0.25, parSel = TRUE,
prec_alpha = 0.01)
res4s<-BNPR_sel(data2,data1,samp_times2,samp_times1,lengthout=50,u.truncation = 0.25, parSel =TRUE,
prec_alpha = 0.000001)
par(mfrow=c(1,2))
plot_BNPR(res3s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="Ne(t)",main="",ylim= c(0.5,500),xlim=c(0.25,0))
plot_BNPR(res4s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="",main="",ylim=c(0.5,500),xlim=c(0.25,0))
par(mfrow=c(1,2))
plot(res4s$beta0post,type="l",lwd=3,main="Posterior beta0")
abline(v=0,col="red",lwd=2)
plot(res4s$beta1post,type="l",lwd=3,,main="Posterior beta1")
abline(v=1,col="red",lwd=2)
res4s$beta1summ
treeDelta<-read.nexus("../beast2_ver_3/tree_uk_2_delta")
plot(treeDelta,show.tip.label=FALSE)
axisPhylo()
treeNotdelta<-read.nexus("../beast2_ver_3/tree_uk_2_notdelta")
#tree not delta refinement
#treeD <-drop.tip(tree,treeG$tip.label) # This is the D clade
treeNotdelta <- extract.clade(treeNotdelta,152)
plot(treeNotdelta,show.tip.label = FALSE,main="ger alpha var")
axisPhylo()
data1<-treeDelta
data2 <- treeNotdelta
samp_times1 <- c()
for (label in data1$tip.label){samp_times1 <- c(samp_times1,strsplit(label,"[|]")[[1]][3])}
samp_times1 <- decimal_date(date(samp_times1))
samp_times2 <- c()
for (label in data2$tip.label){samp_times2 <- c(samp_times2,strsplit(label,"[|]")[[1]][3])}
samp_times2 <- decimal_date(date(samp_times2))
lastdate <- max(c(samp_times1,samp_times2))
samp_times1 <- lastdate-samp_times1
samp_times2 <- lastdate-samp_times2
res2s<-BNPR_sel(data2,data1,samp_times2,samp_times1,lengthout=100,parSel = TRUE,prec_alpha = 0.00000000001)
par(mfrow=c(2,2))
plot_BNPR(res2s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="",main="",ylim=c(0.05,50000),xlim=c(0.5,0))
res2s<-BNPR_sel(data2,data1,samp_times2,samp_times1,lengthout=100,parSel = TRUE,prec_alpha = 1000)
par(mfrow=c(2,2))
plot_BNPR(res2s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="",main="",ylim=c(0.05,50000),xlim=c(0.5,0))
res2s<-BNPR_sel(data2,data1,samp_times2,samp_times1,lengthout=100,parSel = TRUE,prec_alpha = 0.000000000000000000001)
par(mfrow=c(2,2))
plot_BNPR(res2s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="",main="",ylim=c(0.05,50000),xlim=c(0.5,0))
plot_BNPR(res2s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="",main="",ylim=c(0.05,50000),xlim=c(0.25,0))
par(mfrow=c(2,2))
plot_BNPR(res2s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="",main="",ylim=c(0.05,50000),xlim=c(0.25,0))
res4s<-BNPR_sel(data2,data1,samp_times2,samp_times1,lengthout=50,u.truncation = 0.25, parSel =TRUE,
prec_alpha = 0.00001)
plot_BNPR(res4s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="",main="",ylim=c(0.5,500),xlim=c(0.25,0))
res4s<-BNPR_sel(data2,data1,samp_times2,samp_times1,lengthout=50,u.truncation = 0.25, parSel =TRUE,
prec_alpha = 0.000000000000000000001)
plot_BNPR(res4s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="",main="",ylim=c(0.5,500),xlim=c(0.25,0))
res4s<-BNPR_sel(data2,data1,samp_times2,samp_times1,lengthout=50,u.truncation = 0.25, parSel =TRUE,
prec_alpha = 0.000000000000000000000000001)
plot_BNPR(res4s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="",main="",ylim=c(0.5,500),xlim=c(0.25,0))
res4s<-BNPR_sel(data2,data1,samp_times2,samp_times1,lengthout=50,u.truncation = 0.25, parSel =TRUE)
plot_BNPR(res4s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="",main="",ylim=c(0.5,500),xlim=c(0.25,0))
plot_BNPR(res4s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="",main="",ylim=c(0.05,50000),xlim=c(0.25,0))
plot_BNPR(res2s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="",main="",ylim=c(0.05,50000),xlim=c(0.25,0))
res4s$data
plot(res4s$data$Y[2:21,1])
scatter(res2s$data$Y[2:21,1],col='red')
points(res2s$data$Y[2:21,1],col='red')
res2s$data
res4s<-BNPR_sel(data2,data1,samp_times2,samp_times1,lengthout=100,u.truncation = 0.25, parSel =TRUE,
prec_alpha = 0.000000000000000000001)
par(mfrow=c(1,2))
plot_BNPR(res4s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="",main="",ylim=c(0.05,50000),xlim=c(0.25,0))
plot_BNPR(res4s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="",main="",ylim=c(0.05,50000),xlim=c(0.25,0))
res4s$data$Y
plot(res4s$data$Y[2:40,1])
points(res2s$data$Y[2:40,1],col="red")
res4s<-BNPR_sel(data2,data1,samp_times2,samp_times1,lengthout=100,u.truncation = 0.25, parSel =TRUE,
prec_alpha = 0.00000000000000000000000000000000001)
par(mfrow=c(1,2))
plot_BNPR(res4s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="",main="",ylim=c(0.05,50000),xlim=c(0.25,0))
res4s<-BNPR_sel(data2,data1,samp_times2,samp_times1,lengthout=100,u.truncation = 0.25, parSel =TRUE,
prec_alpha = 100)
plot_BNPR(res4s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="",main="",ylim=c(0.05,50000),xlim=c(0.25,0))
res2s<-BNPR_sel(data2,data1,samp_times2,samp_times1,lengthout=100,parSel = TRUE,prec_alpha = 0.000000000000000000001)
plot_BNPR(res2s,heatmaps=FALSE,heatmap_labels = FALSE,ylab="Ne(t)",main="Effective Pop Size",ylim=c(0.5,500),xlim=c(0.25,0))
samp_times1 <- c()
for (label in data1$tip.label){samp_times1 <- c(samp_times1,strsplit(label,"[|]")[[1]][3])}
min(samp_times1)
samp_times2 <- c()
for (label in data2$tip.label){samp_times2 <- c(samp_times2,strsplit(label,"[|]")[[1]][3])}
samp_times1 <- decimal_date(date(samp_times1))
samp_times1 <- c()
for (label in data1$tip.label){samp_times1 <- c(samp_times1,strsplit(label,"[|]")[[1]][3])}
samp_times1 <- decimal_date(date(samp_times1))
samp_times2 <- c()
for (label in data2$tip.label){samp_times2 <- c(samp_times2,strsplit(label,"[|]")[[1]][3])}
samp_times2 <- decimal_date(date(samp_times2))
lastdate <- max(c(samp_times1,samp_times2))
samp_times1 <- lastdate-samp_times1
samp_times2 <- lastdate-samp_times2
max(samp_times1)
max(samp_times2)
date_decimal
date_decimal(2020.2)
date_decimal(2020.6)
date_decimal(2020.8)
